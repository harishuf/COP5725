
2. BEST SELLING MODELS
===========================
create or replace view best_selling_models as 
select manufacturer_name,model_name,count(*) as models_sold_count from model m 
inner join used_car u on m.model_id = u.model_id
inner join listing l on u.registration_number=l.registration_number and status='sold'
inner join  manufacturer man on m.manufacturer_id=man.manufacturer_id 
group by manufacturer_name,model_name
order by models_sold_count desc;

3. AVERAGE PRICE PER MODEL
============================

create or replace view average_price_per_model as
select man.manufacturer_name,m.model_name,cast(avg(l.price) as decimal(10)) as avg_price from model m
join used_car u on u.model_id=m.model_id
join listing l on u.registration_number=l.registration_number
join manufacturer man on m.manufacturer_id=man.manufacturer_id
group by man.manufacturer_name,m.model_name
order by avg_price desc;

4. Preferred Attribute Combo
==============================

create or replace view preferred_attribute_combo as
select max(CNT) as maximum_count,model_name,fuel_type,gearbox_type,vehicle_type from (
select count(*) as CNT, m.model_name,m.fuel_type, m.vehicle_type,m.gearbox_type from model m
join used_car u on m.model_id=u.MODEL_ID
left join listing l on u.registration_number=l.registration_number where status='sold'
group by m.model_name,m.fuel_type,m.vehicle_type, m.gearbox_type) m1
where model_name=m1.model_name 
group by model_name,model_name,fuel_type,gearbox_type,vehicle_type
order by maximum_count desc;

5. Models Per State
========================
create or replace view unsold_per_state as
select state, count(*) as CNT from user_detail u
inner join listing l on u.email_id=l.email_id 
join used_car uc on l.registration_number=uc.registration_number
join model m on uc.model_id=m.model_id
join manufacturer man on m.manufacturer_id=man.manufacturer_id
where l.status='unsold'
group by state
order by CNT desc;

6. Model Average Price by Registration year
==========================================
create or replace view model_avg_price_by_year as
select registration_year,manufacturer_name,model_name, cast(avg(price) as decimal(10,2)) as privar from used_car u
inner join model m on u.model_id=m.model_id
inner join listing l on u.registration_number=l.registration_number
inner join manufacturer mn on m.manufacturer_id=mn.manufacturer_id
where registration_year between '1990' and '2015'
group by registration_year,manufacturer_name,model_name
order by manufacturer_name,model_name;

7. Affordable Users
======================

create or replace view affordable_users as
select ud.first_name,ud.last_name, ud.email_id, max(price) as maxprice, min(price) as minprice, cast(avg(price) as decimal(10,2)) as avgprice from user_detail ud
join listing l on ud.email_id=l.email_id 
group by ud.first_name,ud.last_name,ud.email_id
order by avgprice asc;

8. Fast Moving Models
=========================
create or replace view fast_moving_models as 
select manufacturer_name,model_name,cast(avg(extract(day from date_sold-date_created))as decimal(10)) as avg_days_on_website from model m
join manufacturer man on m.manufacturer_id=man.manufacturer_id
join used_car u on m.model_id=u.model_id
join listing l on u.registration_number=l.registration_number where status='sold'
group by manufacturer_name,model_name
order by avg_days_on_website;

9. Accident Vs Non Accident Price
===================================

create or replace view accident_vs_nonaccident as
select T1.manufacturer_name,T1.price_with_accidents,T2.price_without_accidents from (
select manufacturer_name,cast(avg(price) as decimal(10,2)) as price_with_accidents from manufacturer mn
inner join model m on mn.manufacturer_id=m.manufacturer_id
inner join used_car u on u.model_id=m.model_id 
inner join listing l on u.registration_number=l.registration_number
where u.accident_history='yes'
group by manufacturer_name
order by price_with_accidents) T1 inner join (select manufacturer_name,cast(avg(price) as decimal(10,2)) as price_without_accidents from manufacturer mn
inner join model m on mn.manufacturer_id=m.manufacturer_id
inner join used_car u on u.model_id=m.model_id 
inner join listing l on u.registration_number=l.registration_number
where u.accident_history='no'
group by manufacturer_name
order by price_without_accidents) T2 on T1.manufacturer_name=T2.manufacturer_name;